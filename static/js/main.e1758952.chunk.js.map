{"version":3,"sources":["game/style.module.css","containers/App/style.module.css","game/modules/game/settingsConfig.ts","game/modules/game/circle/preload.ts","game/modules/game/storyConfig.ts","game/modules/scenes/assets/dialogs.ts","game/modules/scenes/assets/preloadData.ts","game/modules/scenes/modules/Player.ts","game/modules/scenes/modules/Dialog.ts","game/modules/scenes/modules/Extensions.ts","utils/createGuard.ts","game/modules/scenes/modules/Level.ts","game/modules/scenes/Default.ts","game/modules/service/config.ts","game/index.tsx","game/instance.ts","containers/App/index.tsx","index.js"],"names":["module","exports","settingsConfig","delta","width","height","y","buttons","margin","top","right","colors","names","text","triggerDebug","animation","ease","duration","preloadData","data","forEach","unit","method","content","load","storyConfig","tal","NAME","PORTRAIT","dialogs","portrait","name","replica","gameResourcesData","assets","Player","scene","cursors","playerBody","playerVisual","camera","playerParamsConfig","blockMove","left","blocked","time","coordinates","x","world","map","this","createPlayer","createCamera","createTeleport","playerBounce","playerData","getObjectLayer","objects","physics","add","sprite","setAlpha","setBounce","setCircle","collider","body","setCollideWorldBounds","setBounds","widthInPixels","heightInPixels","setCollisionByExclusion","input","keyboard","createCursorKeys","player","cameras","main","smoothMoveCameraTowards","target","smoothFactor","undefined","scrollX","scrollY","anims","create","key","frames","frameRate","repeat","on","play","destroy","isBlocked","control","resetBlockMove","controlPlayerBody","velocity","angle","maxXVelocity","startedXVelocity","flyXVelocity","wallJumpXVelocity","wallJumpYVelocity","jumpVelocity","inertia","playerAcceleration","oldVelocityX","isDown","down","none","up","setBlockMove","setVelocityX","Math","max","setVelocityY","min","direction","moveBlockTime","canLeftMove","canRightMove","Dialog","sceneId","extensions","wrapper","tweens","activeDialog","sceneDialogs","game","config","sceneWidth","Number","leftBGFrame","setOrigin","rightBGFrame","setPosition","nextButton","setInteractive","setScrollFactor","skipButton","nextDialog","dialogEnd","nextButtonClick","bind","skipButtonClick","centerBG","tileSprite","container","hideTween","targets","showTween","hide","show","createDialogTriggers","tween","onComplete","once","isActive","tweensPlay","dialogId","dialog","id","createPortrait","createName","createText","showDialog","imgName","firstFrame","list","image","imgFit","make","origin","style","font","color","wordWrap","useAdvancedWrap","portraitWidth","textMargin","actualReplicaNumber","length","valueOfReplica","clearDialog","isSkip","actualReplicaElement","callback","closeDialog","ignoredDialogs","JSON","parse","localStorage","getItem","actualSceneIgnored","push","newActualIgnored","Set","setItem","stringify","hideDialog","debug","createRectangle","properties","find","value","trigger","zone","enable","setAllowGravity","moves","overlap","createConversation","Extensions","img","maxWidth","maxHeight","widthScale","heightScale","scale","setScale","alpha","graphics","fillStyle","fillRect","props","reduce","acm","upLeftX","apply","upLeftY","rectWidth","rectHeight","createGuard","arcadeBodyGuard","checkedKey","result","Level","createButtons","buttonsList","textures","get","getFrameNames","i","getPropsFromObject","button","tileName","createBridge","bridgetId","bridgesList","gameHeight","bridgeSprites","yFromDirection","from","bridge","setTimeout","findCorners","bridgeBody","Phaser","Physics","Arcade","STATIC_BODY","setImmovable","setFriction","DefaultScene","call","tilemap","tileset","addTilesetImage","createLayer","update","Scene","type","CANVAS","parent","backgroundColor","default","arcade","gravity","Game","useState","refBox","setRefBox","useEffect","offsetWidth","className","css","root","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1758952.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1dm-u\",\"game\":\"style_game__2Ib68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__3ua4_\"};","export const settingsConfig = {\r\n  gravity: 500,\r\n  maxXVelocity: 800,\r\n  startedXVelocity: 250,\r\n  flyXVelocity: 2,\r\n  jumpVelocity: 300,\r\n  inertia: 100,\r\n\r\n  wallJumpXVelocity: 500,\r\n  wallJumpYVelocity: 400,\r\n\r\n  moveBlockTime: 500, //ms\r\n  playerBounce: 0.2,\r\n\r\n  playerAcceleration: (delta: number) => delta / 2,\r\n\r\n  dialogWrapperMoveTime: 800,\r\n\r\n  portraits: {\r\n    width: 150,\r\n    height: 170,\r\n    y: 10,\r\n  },\r\n  dialog: {\r\n    buttons: {\r\n      width: 100,\r\n      height: 100,\r\n      margin: {\r\n        top: 10,\r\n        right: 15,\r\n      },\r\n    },\r\n    colors: {\r\n      names: \"red\",\r\n      text: \"white\",\r\n    },\r\n\r\n    triggerDebug: true,\r\n  },\r\n\r\n  bridges: {\r\n    animation: {\r\n      ease: \"Quad.easeInOut\",\r\n      duration: 1000,\r\n    },\r\n  },\r\n};\r\n","import { Scene } from \"phaser\";\r\nimport { PreloadTypes } from \"./types\";\r\n\r\nexport function preloadData(this: Scene, data: PreloadTypes[]) {\r\n  data.forEach((unit) => {\r\n    const { method, data } = unit;\r\n\r\n    data.forEach((content) => {\r\n      // @ts-ignore: Unreachable code error\r\n      const result = this.load[method](...content);\r\n    });\r\n  });\r\n}\r\n","export const storyConfig = {\r\n  characters: {\r\n    tal: {\r\n      NAME: \"TAL\",\r\n      PORTRAIT: \"tal\",\r\n    },\r\n  },\r\n};\r\n","import { DialogList } from \"../../game/circle/types\";\r\nimport { storyConfig } from \"../../game/storyConfig\";\r\n\r\nconst { tal } = storyConfig.characters;\r\n\r\nexport const dialogs: DialogList = [\r\n  [\r\n    {\r\n      portrait: tal.PORTRAIT,\r\n      name: tal.NAME,\r\n      replica: \"Hi, my friend\",\r\n    },\r\n    {\r\n      portrait: tal.PORTRAIT,\r\n      name: tal.NAME,\r\n      replica: \"This is our first dialog\",\r\n    },\r\n    {\r\n      portrait: tal.PORTRAIT,\r\n      name: tal.NAME,\r\n      replica:\r\n        \"test string: lalalalalala ababagalamaga -sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo -*/ s d f dsf -dfsd f -hhfghfgh-jopikdsf ojeo /* sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo\",\r\n    },\r\n    {\r\n      portrait: tal.PORTRAIT,\r\n      name: tal.NAME,\r\n      replica: \"Hope you fun\",\r\n    },\r\n  ],\r\n];\r\n","import { PreloadTypes } from \"../../game/circle/types\";\r\nimport { storyConfig } from \"../../game/storyConfig\";\r\n\r\nconst assets = \"assets/\";\r\n\r\nconst { tal } = storyConfig.characters;\r\n\r\nexport const gameResourcesData: PreloadTypes[] = [\r\n  {\r\n    method: \"image\",\r\n    data: [\r\n      [\"platforms32x32\", assets + \"platforms/platforms32x32.png\"],\r\n      [\"playerSprite\", assets + \"player/body.png\"],\r\n      [\"playerBody\", assets + \"player/ball.png\"],\r\n\r\n      [\"dialogCenter\", assets + \"ui/dialog-2.png\"],\r\n      [\"dialogLeft\", assets + \"ui/dialog-1.png\"],\r\n      [\"dialogRight\", assets + \"ui/dialog-3.png\"],\r\n      [\"dialogNextButton\", assets + \"ui/dialog-button-next.png\"],\r\n      [\"dialogSkipButton\", assets + \"ui/dialog-button-skip.png\"],\r\n\r\n      //portraits\r\n      [tal.PORTRAIT, assets + \"characters/TAL/portrait.png\"],\r\n    ],\r\n  },\r\n\r\n  {\r\n    method: \"tilemapTiledJSON\",\r\n    data: [[\"map\", assets + \"levels/default/level.json\"]],\r\n  },\r\n\r\n  {\r\n    method: \"atlas\",\r\n    data: [\r\n      [\r\n        \"teleport\",\r\n        assets + \"effects/teleport.png\",\r\n        assets + \"effects/teleport_atlas.json\",\r\n      ],\r\n      [\r\n        \"buttons\",\r\n        assets + \"buttons/buttons.png\",\r\n        assets + \"buttons/buttons.json\",\r\n      ],\r\n      [\r\n        \"bridges\",\r\n        assets + \"bridges/bridget.png\",\r\n        assets + \"bridges/bridget.json\",\r\n      ],\r\n    ],\r\n  },\r\n];\r\n","import { Scene } from \"phaser\";\r\nimport { PlayerParamsConfig } from \"../../game/circle/types\";\r\nimport { settingsConfig } from \"../../game/settingsConfig\";\r\nimport DefaultScene from \"../Default\";\r\n\r\nexport class Player {\r\n  cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\r\n  playerBody!: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody;\r\n  playerVisual!: Phaser.GameObjects.Sprite;\r\n  camera!: Phaser.Cameras.Scene2D.Camera;\r\n  playerParamsConfig: PlayerParamsConfig = {\r\n    blockMove: {\r\n      left: {\r\n        blocked: false,\r\n        time: 0,\r\n      },\r\n      right: {\r\n        blocked: false,\r\n        time: 0,\r\n      },\r\n    },\r\n  };\r\n  coordinates = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  constructor(scene: DefaultScene) {\r\n    const { world, map } = scene;\r\n\r\n    if (map && world) {\r\n      this.createPlayer(scene, map, world);\r\n      this.createCamera(scene, map, this.playerBody);\r\n    }\r\n    this.createTeleport(scene, this.playerBody);\r\n  }\r\n\r\n  createPlayer(\r\n    scene: DefaultScene,\r\n    map: Phaser.Tilemaps.Tilemap,\r\n    world: Phaser.Tilemaps.TilemapLayer\r\n  ) {\r\n    const { playerBounce } = settingsConfig;\r\n    const layer = map.getObjectLayer(\"player\");\r\n    const playerData = layer.objects[0];\r\n\r\n    this.playerBody = scene.physics.add\r\n      .sprite(playerData.x || 0, playerData.y || 0, \"playerSprite\")\r\n      .setAlpha(0);\r\n    this.playerVisual = scene.add.sprite(\r\n      this.playerBody.x,\r\n      this.playerBody.y,\r\n      \"playerBody\"\r\n    );\r\n    this.playerBody\r\n      .setBounce(playerBounce)\r\n      .setCircle(this.playerBody.width / 2);\r\n    scene.physics.add.collider(this.playerBody, world);\r\n    this.playerBody.body.setCollideWorldBounds(true);\r\n    scene.physics.world.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\r\n    world.setCollisionByExclusion([-1], true);\r\n\r\n    this.cursors = scene.input.keyboard.createCursorKeys();\r\n  }\r\n\r\n  createCamera(\r\n    scene: DefaultScene,\r\n    map: Phaser.Tilemaps.Tilemap,\r\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody\r\n  ) {\r\n    this.camera = scene.cameras.main;\r\n    this.camera.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\r\n    this.smoothMoveCameraTowards(player);\r\n  }\r\n\r\n  smoothMoveCameraTowards(\r\n    target: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody | null,\r\n    smoothFactor?: number\r\n  ) {\r\n    if (this.camera && target) {\r\n      if (smoothFactor === undefined) {\r\n        smoothFactor = 0;\r\n      }\r\n      this.camera.scrollX =\r\n        smoothFactor * this.camera.scrollX +\r\n        (1 - smoothFactor) * (target.x - this.camera.width * 0.5);\r\n      this.camera.scrollY =\r\n        smoothFactor * this.camera.scrollY +\r\n        (1 - smoothFactor) * (target.y - this.camera.height * 0.5);\r\n    }\r\n  }\r\n\r\n  createTeleport(\r\n    scene: DefaultScene,\r\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody\r\n  ) {\r\n    scene.anims.create({\r\n      key: \"teleportAnimation\",\r\n      frames: \"teleport\",\r\n      frameRate: 20,\r\n      repeat: 0,\r\n    });\r\n    scene.input.keyboard.on(\"keydown-ENTER\", () => {\r\n      this.coordinates = {\r\n        x: player.x || 0,\r\n        y: player.y || 0,\r\n      };\r\n    });\r\n\r\n    scene.input.keyboard.on(\"keydown-SPACE\", () => {\r\n      const { x, y } = this.coordinates;\r\n      if (player) {\r\n        player.x = x;\r\n        player.y = y;\r\n      }\r\n\r\n      const sprite = scene.add\r\n        .sprite(x, y, \"teleport\")\r\n        .play(\"teleportAnimation\")\r\n        .on(\"complete\", () => {\r\n          sprite.destroy();\r\n        });\r\n    });\r\n  }\r\n\r\n  update(time: number, delta: number, isBlocked?: boolean) {\r\n    this.control(delta, time, isBlocked);\r\n    this.resetBlockMove(time);\r\n    this.controlPlayerBody(delta);\r\n    this.smoothMoveCameraTowards(this.playerBody, 0.9);\r\n  }\r\n\r\n  controlPlayerBody(delta: number) {\r\n    this.playerVisual.x = this.playerBody.x;\r\n    this.playerVisual.y = this.playerBody.y;\r\n\r\n    if (this.playerBody.body.velocity.x) {\r\n      this.playerVisual.angle +=\r\n        delta * 0.003 * this.playerBody.body.velocity.x;\r\n    }\r\n  }\r\n\r\n  control(delta: number, time: number, isBlocked?: boolean) {\r\n    const {\r\n      maxXVelocity,\r\n      startedXVelocity,\r\n      flyXVelocity,\r\n      wallJumpXVelocity,\r\n      wallJumpYVelocity,\r\n      jumpVelocity,\r\n      inertia,\r\n      playerAcceleration,\r\n    } = settingsConfig;\r\n\r\n    const { velocity } = this.playerBody.body;\r\n    const oldVelocityX = velocity.x;\r\n\r\n    ///---- Left\r\n    if (\r\n      this.cursors.left.isDown &&\r\n      !this.playerParamsConfig.blockMove.left.blocked &&\r\n      !isBlocked\r\n    ) {\r\n      if (!this.playerBody.body.blocked.none) {\r\n        if (oldVelocityX === 0) {\r\n          velocity.x = -startedXVelocity;\r\n        } else if (oldVelocityX > 0) {\r\n          velocity.x = oldVelocityX * -1;\r\n        } else if (velocity.x > maxXVelocity * -1) {\r\n          velocity.x -= playerAcceleration(delta);\r\n        } else if (velocity.x >= maxXVelocity * -1) {\r\n          velocity.x = maxXVelocity * -1;\r\n        }\r\n      } else {\r\n        velocity.x -= flyXVelocity;\r\n      }\r\n\r\n      ///---- Right\r\n    } else if (\r\n      this.cursors.right.isDown &&\r\n      !this.playerParamsConfig.blockMove.right.blocked &&\r\n      !isBlocked\r\n    ) {\r\n      if (!this.playerBody.body.blocked.none) {\r\n        if (oldVelocityX === 0) {\r\n          velocity.x = startedXVelocity;\r\n        } else if (oldVelocityX < 0) {\r\n          velocity.x = oldVelocityX * -1;\r\n        } else if (velocity.x < maxXVelocity) {\r\n          velocity.x += playerAcceleration(delta);\r\n        } else if (velocity.x >= maxXVelocity) {\r\n          velocity.x = maxXVelocity;\r\n        }\r\n      } else {\r\n        velocity.x += flyXVelocity;\r\n      }\r\n      ///---- None\r\n    } else {\r\n      if (this.playerBody.body.blocked.down) {\r\n        if (velocity.x > inertia) {\r\n          velocity.x -= delta * 2;\r\n        } else if (velocity.x < -inertia) {\r\n          velocity.x += delta * 2;\r\n        } else {\r\n          velocity.x = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    ///---- Up\r\n    if (this.cursors.up.isDown && !isBlocked) {\r\n      if (this.playerBody.body.blocked.left) {\r\n        this.setBlockMove(\"left\", time);\r\n        this.playerBody.setVelocityX(Math.max(wallJumpXVelocity, oldVelocityX));\r\n        this.playerBody.setVelocityY(-wallJumpYVelocity);\r\n      } else if (this.playerBody.body.blocked.right) {\r\n        this.setBlockMove(\"right\", time);\r\n        this.playerBody.setVelocityX(\r\n          Math.min(-wallJumpXVelocity, oldVelocityX)\r\n        );\r\n        this.playerBody.setVelocityY(-wallJumpYVelocity);\r\n      } else if (this.playerBody.body.blocked.down) {\r\n        this.playerBody.setVelocityY(-jumpVelocity);\r\n      }\r\n    }\r\n  }\r\n  setBlockMove(direction: keyof PlayerParamsConfig[\"blockMove\"], time: number) {\r\n    const { blockMove } = this.playerParamsConfig;\r\n    blockMove[direction].blocked = true;\r\n    blockMove[direction].time = time;\r\n  }\r\n\r\n  resetBlockMove(time: number) {\r\n    const { moveBlockTime } = settingsConfig; //ms\r\n    const { left, right } = this.playerParamsConfig.blockMove;\r\n\r\n    const canLeftMove = time - left.time > moveBlockTime;\r\n\r\n    const canRightMove = time - right.time > moveBlockTime;\r\n\r\n    if (canLeftMove) {\r\n      left.blocked = false;\r\n    }\r\n\r\n    if (canRightMove) {\r\n      right.blocked = false;\r\n    }\r\n  }\r\n}\r\n","import { Scene } from \"phaser\";\r\nimport {\r\n  ActiveDialog,\r\n  DialogList,\r\n  DialogProperties,\r\n  IgnoredDialogs,\r\n  Tweens,\r\n} from \"../../game/circle/types\";\r\nimport { settingsConfig } from \"../../game/settingsConfig\";\r\nimport DefaultScene from \"../Default\";\r\nimport { Extensions } from \"./Extensions\";\r\n\r\nexport class Dialog {\r\n  scene: DefaultScene;\r\n  extensions: Extensions;\r\n\r\n  wrapper: Phaser.GameObjects.Container;\r\n  tweens: Tweens;\r\n\r\n  activeDialog: ActiveDialog | null = null;\r\n  sceneDialogs: DialogList;\r\n  sceneId: number;\r\n\r\n  constructor(scene: DefaultScene, dialogs: DialogList, sceneId: number) {\r\n    this.sceneId = sceneId;\r\n    this.sceneDialogs = dialogs;\r\n    this.scene = scene;\r\n    this.extensions = scene.extensions;\r\n\r\n    const { width, height } = scene.game.config;\r\n    const sceneWidth = Number(width);\r\n\r\n    const leftBGFrame = scene.add.sprite(0, 0, \"dialogLeft\").setOrigin(0, 0);\r\n    const rightBGFrame = scene.add\r\n      .sprite(sceneWidth, 0, \"dialogRight\")\r\n      .setOrigin(0, 0);\r\n    rightBGFrame.setPosition(\r\n      rightBGFrame.x - rightBGFrame.width,\r\n      rightBGFrame.y\r\n    );\r\n    const { buttons } = settingsConfig.dialog;\r\n\r\n    const nextButton = scene.add\r\n      .sprite(\r\n        sceneWidth - buttons.margin.right,\r\n        buttons.margin.top,\r\n        \"dialogNextButton\"\r\n      )\r\n      .setInteractive()\r\n      .setScrollFactor(0)\r\n      .setOrigin(1, 0);\r\n    const skipButton = scene.add\r\n      .sprite(\r\n        sceneWidth - buttons.margin.right,\r\n        buttons.margin.top * 2 + buttons.height,\r\n        \"dialogSkipButton\"\r\n      )\r\n      .setInteractive()\r\n      .setScrollFactor(0)\r\n      .setOrigin(1, 0);\r\n    // this.extensions.imgFit(nextButton, buttons.width, buttons.height); //fit img to config size\r\n    // this.extensions.imgFit(skipButton, buttons.width, buttons.height); //fit img to config size\r\n\r\n    const { nextDialog, dialogEnd } = this;\r\n    const nextButtonClick = nextDialog.bind(this);\r\n    const skipButtonClick = dialogEnd.bind(this, true);\r\n    nextButton.on(\"pointerup\", nextButtonClick);\r\n    skipButton.on(\"pointerup\", skipButtonClick);\r\n\r\n    const centerBG = scene.add\r\n      .tileSprite(\r\n        leftBGFrame.width,\r\n        0,\r\n        sceneWidth - leftBGFrame.width - rightBGFrame.width,\r\n        rightBGFrame.height,\r\n        \"dialogCenter\"\r\n      )\r\n      .setOrigin(0, 0);\r\n\r\n    this.wrapper = scene.add\r\n      .container(0, 0)\r\n      .add([leftBGFrame, rightBGFrame, centerBG, nextButton, skipButton])\r\n      .setScrollFactor(0)\r\n      .setPosition(0, -centerBG.height);\r\n\r\n    const hideTween = scene.tweens.create({\r\n      targets: this.wrapper,\r\n\r\n      y: -centerBG.height,\r\n      ease: \"Quad.easeInOut\",\r\n      repeat: 0,\r\n      duration: settingsConfig.dialogWrapperMoveTime,\r\n    });\r\n\r\n    const showTween = scene.tweens.create({\r\n      targets: this.wrapper,\r\n      y: 0,\r\n      ease: \"Quad.easeInOut\",\r\n      repeat: 0,\r\n      duration: settingsConfig.dialogWrapperMoveTime,\r\n    });\r\n\r\n    this.tweens = {\r\n      hide: hideTween,\r\n      show: showTween,\r\n    };\r\n\r\n    this.createDialogTriggers(scene.map);\r\n  }\r\n\r\n  tweensPlay(tween: Phaser.Tweens.Tween, onComplete?: () => void) {\r\n    if (onComplete) {\r\n      tween.once(\"complete\", () => {\r\n        onComplete && onComplete();\r\n      });\r\n    }\r\n    tween.play();\r\n  }\r\n\r\n  showDialog(onComplete?: () => void) {\r\n    if (this.activeDialog) {\r\n      this.activeDialog.isActive = true;\r\n    }\r\n\r\n    this.tweensPlay(this.tweens.show, onComplete);\r\n  }\r\n\r\n  hideDialog(onComplete?: () => void) {\r\n    if (this.activeDialog) {\r\n      this.activeDialog.isActive = false;\r\n    }\r\n    this.tweensPlay(this.tweens.hide, onComplete);\r\n  }\r\n\r\n  createConversation(dialogId: number) {\r\n    const activeDialog = this.sceneDialogs[dialogId];\r\n    if (activeDialog) {\r\n      this.activeDialog = {\r\n        dialog: activeDialog,\r\n        replica: 0,\r\n        id: dialogId,\r\n        objects: {},\r\n      };\r\n\r\n      const { name, portrait, replica } = activeDialog[0];\r\n      this.createPortrait(portrait);\r\n      this.createName(name);\r\n      this.createText(replica);\r\n\r\n      this.showDialog();\r\n    }\r\n  }\r\n\r\n  createPortrait(imgName: string) {\r\n    const { height, width, y } = settingsConfig.portraits;\r\n    const firstFrame = this.wrapper.list[0];\r\n    const portrait = this.scene.add\r\n      //@ts-ignore\r\n      .image(firstFrame.width || 25, y, imgName)\r\n      .setOrigin(0);\r\n\r\n    this.extensions.imgFit(portrait, width, height);\r\n\r\n    this.wrapper.add(portrait);\r\n\r\n    if (this.activeDialog) {\r\n      this.activeDialog.objects.portrait = portrait;\r\n    }\r\n  }\r\n\r\n  createName(name: string) {\r\n    const { height, width } = settingsConfig.portraits;\r\n\r\n    const text = this.scene.make.text({\r\n      x: 0,\r\n      y: 0,\r\n      text: name,\r\n      origin: { x: 0.5, y: 0 },\r\n      style: {\r\n        font: \"25px Arial\",\r\n        color: settingsConfig.dialog.colors.names,\r\n        wordWrap: {\r\n          width: width,\r\n          useAdvancedWrap: true,\r\n        },\r\n      },\r\n    });\r\n\r\n    text.x = 25 + width / 2;\r\n    text.y = height + 30;\r\n\r\n    this.wrapper.add(text);\r\n\r\n    if (this.activeDialog) {\r\n      this.activeDialog.objects.name = text;\r\n    }\r\n  }\r\n\r\n  createText(replica: string) {\r\n    const { y, width: portraitWidth } = settingsConfig.portraits;\r\n    const { buttons, colors } = settingsConfig.dialog;\r\n    const textMargin = 50;\r\n    const text = this.scene.make.text({\r\n      x: portraitWidth + textMargin,\r\n      y: y * 2,\r\n      text: replica,\r\n      origin: { x: 0, y: 0 },\r\n      style: {\r\n        font: \"bold 25px Arial\",\r\n        color: colors.text,\r\n        wordWrap: {\r\n          width:\r\n            Number(this.scene.game.config.width) -\r\n            textMargin * 2 -\r\n            portraitWidth -\r\n            buttons.width,\r\n          useAdvancedWrap: true,\r\n        },\r\n      },\r\n    });\r\n\r\n    this.wrapper.add(text);\r\n\r\n    if (this.activeDialog) {\r\n      this.activeDialog.objects.text = text;\r\n    }\r\n  }\r\n\r\n  clearDialog() {\r\n    if (this.activeDialog) {\r\n      const { objects } = this.activeDialog;\r\n\r\n      objects.name?.destroy();\r\n      objects.portrait?.destroy();\r\n      objects.text?.destroy();\r\n    }\r\n  }\r\n\r\n  nextDialog() {\r\n    if (this.activeDialog) {\r\n      const { dialog, replica } = this.activeDialog;\r\n      const actualReplicaNumber = replica + 1;\r\n\r\n      if (actualReplicaNumber < dialog.length) {\r\n        const {\r\n          name,\r\n          portrait,\r\n          replica: valueOfReplica,\r\n        } = dialog[actualReplicaNumber];\r\n        this.clearDialog();\r\n\r\n        this.createPortrait(portrait);\r\n        this.createName(name);\r\n        this.createText(valueOfReplica);\r\n\r\n        this.activeDialog.replica = actualReplicaNumber;\r\n      } else {\r\n        this.dialogEnd();\r\n      }\r\n    }\r\n  }\r\n\r\n  dialogEnd(isSkip?: boolean) {\r\n    if (this.activeDialog) {\r\n      const { dialog, replica, id: dialogId } = this.activeDialog;\r\n      const actualReplicaElement = dialog[replica] || dialog[dialog.length - 1];\r\n      actualReplicaElement.callback && actualReplicaElement.callback();\r\n      this.closeDialog();\r\n\r\n      if (isSkip && (dialogId || dialogId === 0)) {\r\n        const ignoredDialogs: IgnoredDialogs = JSON.parse(\r\n          localStorage.getItem(\"ignoredDialogs\") || \"[]\"\r\n        );\r\n        const actualSceneIgnored = ignoredDialogs[this.sceneId] || [];\r\n        actualSceneIgnored.push(dialogId);\r\n\r\n        const newActualIgnored = [...new Set(actualSceneIgnored)];\r\n        ignoredDialogs[this.sceneId] = newActualIgnored;\r\n\r\n        localStorage.setItem(\"ignoredDialogs\", JSON.stringify(ignoredDialogs));\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialog() {\r\n    const { clearDialog } = this;\r\n    this.hideDialog(clearDialog.bind(this));\r\n  }\r\n\r\n  createTrigger(x: number, y: number, width: number, height: number) {\r\n    const debug = settingsConfig.dialog.triggerDebug;\r\n    return this.scene.extensions.createRectangle(\r\n      x,\r\n      y,\r\n      width,\r\n      height,\r\n      0x00ff00,\r\n      debug ? 0.3 : 0\r\n    );\r\n  }\r\n\r\n  createDialogTriggers(map: Phaser.Tilemaps.Tilemap | null) {\r\n    if (map) {\r\n      const layer = map.getObjectLayer(\"dialogs\");\r\n      const triggerObjects = layer.objects;\r\n\r\n      triggerObjects.forEach(\r\n        ({ x = -100, y = -100, width = 32, height = 32, properties }) => {\r\n          const props: DialogProperties[] = properties;\r\n          const dialogId = Number(\r\n            props.find((value) => value.name === \"id\")?.value\r\n          );\r\n\r\n          const trigger = this.scene.add.zone(x, y, width, height).setOrigin(0);\r\n          this.scene.physics.world.enable(trigger);\r\n          //@ts-ignore\r\n          trigger.body.setAllowGravity(false);\r\n\r\n          //@ts-ignore\r\n          trigger.body.moves = false;\r\n\r\n          const { player } = this.scene;\r\n          if (player?.playerBody) {\r\n            this.scene.physics.add.overlap(player.playerBody, trigger, () => {\r\n              this.createConversation(dialogId);\r\n              trigger.destroy();\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Scene } from \"phaser\";\r\nimport {\r\n  ObjectWithCorners,\r\n  TiledObjectProperties,\r\n  UnpackedTiledObjectProperties,\r\n} from \"../../game/circle/types\";\r\n\r\nexport class Extensions {\r\n  scene: Scene;\r\n\r\n  constructor(scene: Scene) {\r\n    this.scene = scene;\r\n  }\r\n\r\n  imgFit(img: Phaser.GameObjects.Image, maxWidth: number, maxHeight: number) {\r\n    const widthScale = maxWidth / img.width;\r\n    const heightScale = maxHeight / img.height;\r\n\r\n    const scale = Math.min(widthScale, heightScale, 1);\r\n\r\n    img.setScale(scale);\r\n  }\r\n\r\n  createRectangle(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    color: number,\r\n    alpha: number\r\n  ) {\r\n    return this.scene.add\r\n      .graphics()\r\n      .fillStyle(color, alpha)\r\n      .fillRect(x, y, width, height);\r\n  }\r\n\r\n  getPropsFromObject(props: TiledObjectProperties[]) {\r\n    return props.reduce<UnpackedTiledObjectProperties>(\r\n      (acm, { name, value }) => {\r\n        return {\r\n          ...acm,\r\n          [name]: value,\r\n        };\r\n      },\r\n      {}\r\n    );\r\n  }\r\n\r\n  findCorners(list: ObjectWithCorners[]) {\r\n    const upLeftX = Math.min.apply(\r\n      null,\r\n      list.reduce((acm: number[], { x }) => {\r\n        acm.push(x);\r\n        return acm;\r\n      }, [])\r\n    );\r\n    const upLeftY = Math.min.apply(\r\n      null,\r\n      list.reduce((acm: number[], { y }) => {\r\n        acm.push(y);\r\n        return acm;\r\n      }, [])\r\n    );\r\n\r\n    const upRightX = Math.max.apply(\r\n      null,\r\n      list.reduce((acm: number[], { x, width }) => {\r\n        acm.push(x + width);\r\n        return acm;\r\n      }, [])\r\n    );\r\n    const upRightY = Math.max.apply(\r\n      null,\r\n      list.reduce((acm: number[], { y, height }) => {\r\n        acm.push(y + height);\r\n        return acm;\r\n      }, [])\r\n    );\r\n\r\n    const rectWidth = upRightX - upLeftX;\r\n    const rectHeight = upRightY - upLeftY;\r\n\r\n    return {\r\n      upLeftX,\r\n      upLeftY,\r\n      rectWidth,\r\n      rectHeight,\r\n    };\r\n  }\r\n}\r\n","export function createGuard<Type>(checkedKey: string) {\r\n  return function (value: Type | any): value is Type {\r\n    if (!value) {\r\n      return false;\r\n    }\r\n\r\n    //@ts-ignore\r\n    const result = (value as Type)[checkedKey];\r\n\r\n    return !!result || result === 0;\r\n  };\r\n}\r\n\r\nexport default createGuard;\r\n","import createGuard from \"../../../../utils/createGuard\";\r\nimport {\r\n  BridgetProps,\r\n  ButtonsProps,\r\n  ObjectWithCorners,\r\n} from \"../../game/circle/types\";\r\nimport { settingsConfig } from \"../../game/settingsConfig\";\r\nimport DefaultScene from \"../Default\";\r\n\r\nconst arcadeBodyGuard = createGuard<Phaser.Physics.Arcade.Body>(\"setVelocity\");\r\nconst { duration, ease } = settingsConfig.bridges.animation;\r\n\r\nexport class Level {\r\n  scene: DefaultScene;\r\n  constructor(scene: DefaultScene) {\r\n    this.scene = scene;\r\n\r\n    const map = scene.map;\r\n    const player = scene.player?.playerBody;\r\n\r\n    if (map && player) {\r\n      this.createButtons(scene, map, player);\r\n    }\r\n  }\r\n\r\n  createButtons(\r\n    scene: DefaultScene,\r\n    map: Phaser.Tilemaps.Tilemap,\r\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody\r\n  ) {\r\n    const layer = map.getObjectLayer(\"buttons\");\r\n    const buttonsList = layer.objects;\r\n\r\n    const textures = scene.textures.get(\"buttons\").getFrameNames();\r\n\r\n    buttonsList.forEach(\r\n      ({ x = -100, y = -100, width = -100, height = -100, properties }, i) => {\r\n        const props: ButtonsProps =\r\n          scene.extensions.getPropsFromObject(properties);\r\n\r\n        const button = scene.add\r\n          .tileSprite(\r\n            x,\r\n            y,\r\n            width,\r\n            height,\r\n            \"buttons\",\r\n            props.tileName || textures[0]\r\n          )\r\n          .setOrigin(0, 1);\r\n        scene.physics.world.enable(button);\r\n\r\n        if (arcadeBodyGuard(button.body)) {\r\n          button.body.setAllowGravity(false);\r\n          // button.body.setVelocity(50, 0);\r\n        }\r\n\r\n        scene.physics.add.overlap(player, button, () => {\r\n          button.destroy();\r\n          this.createBridge(scene, map, player, props.bridgetId);\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createBridge(\r\n    scene: DefaultScene,\r\n    map: Phaser.Tilemaps.Tilemap,\r\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\r\n    id?: string | number\r\n  ) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    const layer = map.getObjectLayer(\"bridges\");\r\n    const bridgesList = layer.objects;\r\n    const textures = scene.textures.get(\"bridges\").getFrameNames();\r\n\r\n    const { height } = scene.game.config;\r\n    const gameHeight = Number(height);\r\n\r\n    const bridgeSprites: ObjectWithCorners[] = [];\r\n\r\n    bridgesList.forEach(\r\n      ({ x = -100, y = -100, width = 0, height = 0, properties }, i) => {\r\n        const props: BridgetProps =\r\n          scene.extensions.getPropsFromObject(properties);\r\n\r\n        if (props.bridgetId === id) {\r\n          const yFromDirection =\r\n            props.from === \"bottom\" ? -height * 2 : gameHeight + height * 2;\r\n\r\n          const bridge = scene.add\r\n            .tileSprite(\r\n              x,\r\n              yFromDirection,\r\n              width,\r\n              height,\r\n              \"bridges\",\r\n              props.tileName || textures[0]\r\n            )\r\n            .setOrigin(0, 1);\r\n\r\n          bridgeSprites.push({ ...bridge, y });\r\n\r\n          const bridgeAnimation = scene.tweens.add({\r\n            targets: bridge,\r\n            y,\r\n            ease,\r\n            duration,\r\n            repeat: 0,\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    setTimeout(() => {\r\n      const { upLeftX, upLeftY, rectWidth, rectHeight } =\r\n        scene.extensions.findCorners(bridgeSprites);\r\n      const bridgeBody = scene.add\r\n        .zone(upLeftX, upLeftY, rectWidth, rectHeight)\r\n        .setOrigin(0, 1);\r\n      this.scene.physics.world.enable(\r\n        bridgeBody,\r\n        Phaser.Physics.Arcade.STATIC_BODY\r\n      );\r\n\r\n      if (arcadeBodyGuard(bridgeBody.body)) {\r\n        bridgeBody.body.setAllowGravity(false).setImmovable().setFriction(0, 0);\r\n        bridgeBody.body.moves = false;\r\n      }\r\n\r\n      scene.physics.add.collider(player, bridgeBody, () => {});\r\n    }, duration);\r\n  }\r\n}\r\n","import { Scene } from \"phaser\";\r\nimport { preloadData } from \"../game/circle/preload\";\r\nimport { dialogs } from \"./assets/dialogs\";\r\nimport { gameResourcesData } from \"./assets/preloadData\";\r\nimport { Player } from \"./modules\";\r\nimport { Dialog } from \"./modules/Dialog\";\r\nimport { Extensions } from \"./modules/Extensions\";\r\nimport { Level } from \"./modules/Level\";\r\n\r\nexport default class DefaultScene extends Scene {\r\n  player: Player | null = null;\r\n  extensions!: Extensions;\r\n  dialog: Dialog | null = null;\r\n  map: Phaser.Tilemaps.Tilemap | null = null;\r\n  world: Phaser.Tilemaps.TilemapLayer | null = null;\r\n\r\n  preload() {\r\n    this.extensions = new Extensions(this);\r\n    preloadData.call(this, gameResourcesData);\r\n  }\r\n  create() {\r\n    this.map = this.make.tilemap({ key: \"map\" });\r\n    const tileset = this.map.addTilesetImage(\r\n      \"platforms32x32\",\r\n      \"platforms32x32\"\r\n    );\r\n    this.world = this.map.createLayer(0, tileset, 0, 0);\r\n\r\n    this.player = new Player(this);\r\n    this.dialog = new Dialog(this, dialogs, 0);\r\n    const level = new Level(this);\r\n  }\r\n\r\n  update(time: number, delta: number) {\r\n    this.player?.update(time, delta, this.dialog?.activeDialog?.isActive);\r\n  }\r\n}\r\n","import { settingsConfig } from \"../game/settingsConfig\";\r\nimport DefaultScene from \"../scenes/Default\";\r\n\r\nexport const config: Phaser.Types.Core.GameConfig = {\r\n  type: Phaser.CANVAS,\r\n  parent: \"game-box\",\r\n  height: 720,\r\n  width: 1280,\r\n  scene: [DefaultScene],\r\n  backgroundColor: 0x14003b,\r\n  // transparent: true,\r\n  physics: {\r\n    default: \"arcade\",\r\n    arcade: {\r\n      gravity: { y: settingsConfig.gravity },\r\n      debug: true,\r\n    },\r\n  },\r\n};\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\n\r\nimport { renderGame } from \"./instance\";\r\nimport css from \"./style.module.css\";\r\n\r\nlet game: Phaser.Game | null = null;\r\n\r\nexport const Game = () => {\r\n  const [refBox, setRefBox] = useState<HTMLDivElement | null>(null);\r\n\r\n  // useLayoutEffect(() => {\r\n  //   if (refBox) {\r\n  //     game = renderGame(refBox.offsetWidth);\r\n  //   }\r\n  // }, [refBox]);\r\n\r\n  useEffect(() => {\r\n    if (refBox) {\r\n      setTimeout(() => {\r\n        game = renderGame(refBox.offsetWidth);\r\n      }, 0);\r\n    }\r\n\r\n    return () => {\r\n      game?.destroy(true, false);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <div\r\n        className={css.game}\r\n        id=\"game-box\"\r\n        ref={(ref) => {\r\n          setRefBox(ref);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import Phaser from \"phaser\";\r\nimport { config } from \"./modules/service/config\";\r\n\r\nexport const renderGame = (w: number) => {\r\n  return new Phaser.Game(config);\r\n};\r\n","import css from \"./style.module.css\";\n\nimport { Game } from \"../../game\";\n\nfunction App() {\n  return (\n    <div className={css.root}>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./containers\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}